{"version":3,"sources":["components/Form-AppBar/Form-AppBar.component.js","theme.js","Helpers/UrlList.js","components/Dialog/Dialog.component.js","components/Submit-Button/Submit-Button.component.js","components/Form/Form.js","components/Company-Details/Company-Details.component.js","components/FormTitle/FormTitle.component.js","components/About/About.component.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","title","textAlign","flexGrow","FormAppBarComponent","classes","className","AppBar","position","elevation","color","Toolbar","Typography","variant","IconButton","edge","aria-label","createMuiTheme","palette","primary","main","secondary","Host","DialogComponent","props","open","onClose","useState","submitMessage","setSubmitMessage","useEffect","fetch","then","response","json","data","Dialog","DialogTitle","DialogContent","DialogContentText","withStyles","backgroundColor","Button","FormComponent","useForm","handleSubmit","register","errors","showDialog","setShowDialog","onSubmit","Box","m","Grid","item","xs","md","TextField","fullWidth","name","error","id","borderColor","label","inputProps","ref","required","email","pattern","value","message","messageContent","multiline","rows","type","CompanyDetailsComponent","companyDetails","setCompanyDetails","details","FormTitleComponent","formTitle","setFormTitle","AboutComponent","about","setAbout","display","flexDirection","minHeight","marginTop","marginBottom","App","ThemeProvider","Container","component","maxWidth","container","mb","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a59c2d3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        textAlign: 'left',\r\n        flexGrow: 3,\r\n    },\r\n}));\r\n\r\nexport default function FormAppBarComponent() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position='static' elevation='0' color='secondary'>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        CONTACT FORM\r\n                    </Typography>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#fff\",\r\n        },\r\n        secondary: {\r\n            main: \"rgb(231,233,238)\",\r\n        },\r\n    }\r\n});\r\n","//export const Host = 'http://localhost:4007/';\r\nexport const Host ='http://http://18.194.254.254:4007/';\r\n","import React, {useEffect, useState} from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport {Host} from \"../../Helpers/UrlList\";\r\n\r\nexport default function DialogComponent(props) {\r\n\r\n    const {open, onClose} = props;\r\n    const [submitMessage, setSubmitMessage] = useState('');\r\n    useEffect(() => {\r\n        fetch(`${Host}form/submit-message/get`)\r\n            .then(response => response.json())\r\n            .then(data => setSubmitMessage(data.submitMessage.submitMessage));\r\n    }, []);\r\n\r\n    return (\r\n        <Dialog onClose={onClose} open={open}>\r\n            <DialogTitle>Form Submitted</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {submitMessage}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n","import {withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default withStyles(() => ({\r\n    root: {\r\n        color: '#fff',\r\n        backgroundColor: 'rgb(85, 172, 115)',\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(85, 172, 115)',\r\n        },\r\n    },\r\n}))(Button);\r\n","import React, {useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './Form.style.css';\r\nimport Box from '@material-ui/core/Box';\r\nimport DialogComponent from \"../Dialog/Dialog.component\";\r\nimport SubmitButton from '../Submit-Button/Submit-Button.component';\r\n\r\nexport const FormComponent = () => {\r\n\r\n    const {handleSubmit, register, errors} = useForm();\r\n    const [showDialog, setShowDialog] = useState(false);\r\n\r\n    const onSubmit = () => {\r\n        setShowDialog(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setShowDialog(false);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Box m={1}>\r\n                <Grid item xs={10} md={10}>\r\n                    <label>\r\n                        <Grid item xs={12} md={12}>\r\n                            Your Name <span className='req-asterisk'>*</span>\r\n                        </Grid>\r\n                        <TextField fullWidth name='name' error={!!errors.name} variant='filled'\r\n                                   id=\"standard-required\"\r\n                                   borderColor={'#fff'}\r\n                                   color={'#fff'}\r\n                                   label=\"Your Name\" inputProps={{\r\n                            ref:\r\n                                register({\r\n                                    required: 'Required',\r\n                                })\r\n                        }}/>\r\n                    </label>\r\n                </Grid>\r\n            </Box>\r\n\r\n            <Box m={1}>\r\n                <Grid item xs={10} md={10}>\r\n                    <Grid item xs={12} md={12}>\r\n                        Your Email <span className='req-asterisk'>*</span>\r\n                    </Grid>\r\n                    <TextField fullWidth name='email' error={!!errors.email} variant='filled'\r\n                               id=\"standard-required\"\r\n                               borderColor={'#fff'}\r\n                               color={'#fff'}\r\n                               label=\"Your Email\" inputProps={{\r\n                        ref:\r\n                            register({\r\n                                required: 'Required',\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: \"invalid email address\"\r\n                                }\r\n                            })\r\n                    }}/>\r\n                </Grid>\r\n            </Box>\r\n            <Box m={1}>\r\n                <Grid item xs={10} md={10}>\r\n                    <Grid item xs={12} md={12}>\r\n                        Subject\r\n                    </Grid>\r\n                    <TextField fullWidth name='subject' variant='filled'\r\n                               id=\"standard-required\"\r\n                               borderColor={'#fff'}\r\n                               color={'#fff'}\r\n                               label=\"Your Subject\"/>\r\n                </Grid>\r\n            </Box>\r\n            <Box m={1}>\r\n                <Grid item xs={10} md={10}>\r\n                    <Grid item xs={12} md={12}>\r\n                        Your Message <span className='req-asterisk'>*</span>\r\n                    </Grid>\r\n                    <TextField fullWidth name='messageContent' error={!!errors.messageContent} multiline rows={10}\r\n                               variant='filled'\r\n                               borderColor={'#fff'}\r\n                               color={'#fff'}\r\n                               label=\"Message\"\r\n                               inputProps={{\r\n                                   ref:\r\n                                       register({\r\n                                           required: 'Required',\r\n                                       })\r\n                               }}\r\n                    />\r\n                </Grid>\r\n            </Box>\r\n            <Box m={1}>\r\n                <Grid item xs={12} md={12}>\r\n                    <SubmitButton type='submit' color='' variant=\"contained\">CONTACT</SubmitButton>\r\n                </Grid>\r\n            </Box>\r\n            <DialogComponent onClose={onClose} open={showDialog}/>\r\n        </form>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Host} from \"../../Helpers/UrlList\";\r\n\r\nexport default function CompanyDetailsComponent() {\r\n\r\n    const [companyDetails, setCompanyDetails] = useState(\"\");\r\n    useEffect(() => {\r\n        fetch(`${Host}form/company-details/get`)\r\n            .then(response => response.json())\r\n            .then(data => setCompanyDetails(data.details));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                The Company\r\n            </Typography>\r\n            <div>\r\n                {companyDetails}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport './FormTitle.style.css';\r\nimport {Host} from \"../../Helpers/UrlList\";\r\n\r\n\r\nexport default function FormTitleComponent() {\r\n\r\n    const [formTitle, setFormTitle] = useState(\"\");\r\n    useEffect(() => {\r\n        fetch(`${Host}form/title/get`)\r\n            .then(response => response.json())\r\n            .then(data => setFormTitle(data.title));\r\n    }, []);\r\n\r\n    return (\r\n        <div className='form-title-container'>\r\n            <Typography variant=\"h4\" className='form-title'>\r\n                {formTitle}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Host} from \"../../Helpers/UrlList\";\r\n\r\nexport default function AboutComponent() {\r\n\r\n    const [about, setAbout] = useState(\"\");\r\n    useEffect(() => {\r\n        fetch(`${Host}form/about/get`)\r\n            .then(response => response.json())\r\n            .then(data => setAbout(data.about.about));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\">\r\n                About Us\r\n            </Typography>\r\n            <div>\r\n                {about}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport FormAppBarComponent from \"./components/Form-AppBar/Form-AppBar.component\";\nimport Grid from '@material-ui/core/Grid';\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport {theme} from \"./theme\";\nimport {FormComponent} from \"./components/Form/Form\";\nimport CompanyDetailsComponent from \"./components/Company-Details/Company-Details.component\";\nimport FormTitleComponent from \"./components/FormTitle/FormTitle.component\";\nimport AboutComponent from \"./components/About/About.component\";\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    main: {\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(2),\n    }\n}));\n\nexport default function App() {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <FormAppBarComponent/>\n                <Container component=\"main\" className={classes.main} maxWidth=\"lg\">\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} md={12}>\n                            <FormTitleComponent/>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <FormComponent/>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Box mb={20}>\n                                <Grid item xs={12} md={12}>\n                                    <CompanyDetailsComponent/>\n                                </Grid>\n                            </Box>\n                            <Grid item xs={12} md={12}>\n                                <AboutComponent/>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Container>\n            </div>\n        </ThemeProvider>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}